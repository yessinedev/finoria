name: Build & Publish Finoria App

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: windows-latest # âœ… Windows runner is best for building .exe

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Build Windows app
        run: |
          npm run build:next
          npx electron-builder --win --publish never

      # ðŸ§© Setup SSH key for deployment
      - name: Setup SSH key
        shell: pwsh
        run: |
          $key = @"
          ${{ secrets.VPS_SSH_KEY }}
          "@
          New-Item -ItemType Directory -Force -Path "$env:USERPROFILE\.ssh"
          $key | Out-File -FilePath "$env:USERPROFILE\.ssh\id_ed25519" -Encoding ascii
          icacls "$env:USERPROFILE\.ssh\id_ed25519" /inheritance:r /grant:r "$($env:USERNAME):R"
          ssh-keyscan -H ${{ secrets.VPS_HOST }} | Out-File "$env:USERPROFILE\.ssh\known_hosts" -Encoding ascii

      # ðŸš€ Deploy build artifacts to VPS
      - name: Deploy to VPS
        shell: bash
        run: |
          scp -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no dist/*.exe dist/*.yml \
            ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/var/www/finoria-updates/

      # ðŸ“¦ Publish to GitHub Releases
      - name: Upload release artifacts
        uses: softprops/action-gh-release@v2
        with:
          files: dist/**/*.exe
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
